variant: fcos
version: 1.5.0
storage:
  directories:
    - path: "/opt/systemd/netdata"
      mode: 0755
  files:
    - path: "/opt/systemd/netdata/docker-compose.yml"
      mode: 0644
      contents:
        inline: |-
          version: '3.9'
          services:
            netdata-vol-init:
              image: bitnami/minideb:latest
              container_name: netdata-vol-init
              security_opt:
                - no-new-privileges
                - label=disable
              user: "root"
              group_add:
                - "${CONTAINER_GROUP_ID}"
              command: >
                chown -R ${CONTAINER_USER_ID}:${CONTAINER_GROUP_ID} /tmp/change-ownership-config &&
                chown -R ${CONTAINER_USER_ID}:${CONTAINER_GROUP_ID} /tmp/change-ownership-lib &&
                chown -R ${CONTAINER_USER_ID}:${CONTAINER_GROUP_ID} /tmp/change-ownership-cache
              volumes:
                - "config:/tmp/change-ownership-config"
                - "lib:/tmp/change-ownership-lib"
                - "cache:/tmp/change-ownership-cache"
            netdata:
              image: netdata/netdata
              container_name: netdata
              hostname: monitor.${SERVER_DOMAIN_NAME}
              depends_on:
                netdata-vol-init:
                  condition: service_completed_successfully
              cap_add:
                - SYS_PTRACE
                - SYS_ADMIN
              security_opt:
                - no-new-privileges
                - seccomp:unconfined
                - apparmor:unconfined
                - label=disable
              volumes:
                - "config:/etc/netdata"
                - "lib:/var/lib/netdata"
                - "cache:/var/cache/netdata"
                - "/proc:/host/proc:ro"
                - "/sys:/host/sys:ro"
                - "/etc/passwd:/host/etc/passwd:ro"
                - "/etc/group:/host/etc/group:ro"
                - "/etc/os-release:/host/etc/os-release:ro"
                - "/var/log:/host/var/log:ro"
                - "/host/var/log/journal"
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.netdata.rule=Host(`monitor.${SERVER_DOMAIN_NAME}`)"
                - "traefik.http.routers.netdata.entrypoints=websecure"
                - "traefik.http.routers.netdata.tls.certresolver=letsencryptresolver"
                - "traefik.http.routers.netdata.service=netdata"
                - "traefik.http.services.netdata.loadbalancer.server.port=19999"
                - "traefik.http.routers.netdata.middlewares=netdata-auth"
                - "traefik.http.middlewares.netdata-auth.basicauth.usersfile=/run/secrets/netdata_admin_credentials"
                - "traefik.http.middlewares.netdata-auth.basicauth.realm=MonitorCredentials"
                - "traefik.http.middlewares.netdata-auth.basicauth.headerfield=X-WebAuth-User"
                - "traefik.http.middlewares.netdata-auth.basicauth.removeheader=false"
              environment:
                - "DO_NOT_TRACK=1"
                - "NETDATA_EXTRA_DEB_PACKAGES=netcat-openbsd"
                - "DOCKER_HOST=localhost:19999"
                - "PUID=${CONTAINER_USER_ID}"
                - "PGID=${CONTAINER_GROUP_ID}"
                - "TZ=${TZ}"
              networks:
                - traefik
              restart: unless-stopped
          volumes:
            config:
              external: false
            lib:
              external: false
            cache:
              external: false
          networks:
            traefik:
              name: backend
              external: true
  links:
    - path: /opt/systemd/netdata/docker-compose-backup.sh
      target: /usr/local/bin/docker-compose-backup.sh
systemd:
  units:
  - name: docker.netdata.service
    enabled: true
    contents: |-
      [Unit]
      Description=Netdata Monitor Container
      After=network-online.target docker.service docker.traefik.service
      Requires=network.target network-online.target docker.service docker.traefik.service
      
      [Service]
      Type=oneshot
      TimeoutStartSec=0
      RemainAfterExit=true
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/netdata/
      ExecStartPre=-/usr/bin/docker compose down
      ExecStartPre=-/usr/bin/docker compose rm
      ExecStartPre=-/usr/bin/docker compose pull
      ExecStart=/usr/bin/docker compose up -d
      ExecStop=/usr/bin/docker compose down
      
      [Install]
      WantedBy=multi-user.target
  - name: backup.docker.netdata.service
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Netdata Monitor Container
      After=docker.netdata.service
      Requires=docker.netdata.service

      [Service]
      Type=oneshot
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/netdata/
      ExecStart=/opt/systemd/netdata/docker-compose-backup.sh

      [Install]
      WantedBy=backup.docker.netdata.timer
  - name: backup.docker.netdata.timer
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Netdata Monitor Container at 01:30 daily

      [Timer]
      OnCalendar=*-*-* 01:30:00

      [Install]
      WantedBy=timers.target
