variant: fcos
version: 1.4.0
storage:
  directories:
    - path: "/opt/systemd/vault"
      mode: 0755
    - path: "/opt/vault"
      mode: 0755
  files:
    - path: "/opt/vault/config.hcl"
      mode: 0644
      contents:
        local: files/vault_config.hcl
    - path: "/opt/systemd/vault/docker-compose.yml"
      mode: 0644
      contents:
        inline: |-
          version: '3.9'
          services:
            vault:
              image: hashicorp/vault:1.12
              container_name: vault
              hostname: vault.${SERVER_DOMAIN_NAME}
              entrypoint: vault server -log-level=info -log-format=standard -config=/vault/config/config.hcl
              expose:
                - 2200
                - 2201
              cap_add:
                - IPC_LOCK
              security_opt:
                - no-new-privileges
              volumes:
                - "db:/vault/db"
                - "file:/vault/file"
                - "logs:/vault/logs"
                - "plugins:/vault/plugins:ro"
                - "/opt/vault/config.hcl:/vault/config/config.hcl:ro,Z"
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.vault.service=vault"
                - "traefik.http.routers.vault.rule=Host(`vault.${SERVER_DOMAIN_NAME}`)"
                - "traefik.http.routers.vault.entrypoints=websecure"
                - "traefik.http.routers.vault.tls.certresolver=letsencryptresolver"
                - "traefik.http.services.vault.loadbalancer.server.port=2200"
              environment:
                - "TZ=${TZ}"
              networks:
                - traefik
              restart: unless-stopped
          volumes:
            db:
              external: false
            file:
              external: false
            logs:
              external: false
            plugins:
              external: false
          networks:
            traefik:
              name: backend
              external: true
  links:
    - path: /opt/systemd/vault/docker-compose-backup.sh
      target: /usr/local/bin/docker-compose-backup.sh
systemd:
  units:
  - name: docker.vault.service
    enabled: true
    contents: |-
      [Unit]
      Description=Vaults Secrets Management Container
      After=network-online.target docker.service docker.traefik.service
      Requires=network.target network-online.target docker.service docker.traefik.service
      
      [Service]
      Type=oneshot
      TimeoutStartSec=0
      RemainAfterExit=true
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/vault/
      ExecStartPre=-/usr/bin/timeout 2m /usr/bin/bash -c "while [ ! -x /usr/bin/docker-compose ]; do sleep 1; done"
      ExecStartPre=-/usr/bin/timeout 1m /usr/bin/bash -c "while [ ! -x \"$(find /usr/lib64 -name 'libpython3*.so.*' | head -1)\" ]; do sleep 1; done"
      ExecStartPre=-/usr/bin/docker-compose down
      ExecStartPre=-/usr/bin/docker-compose rm
      ExecStartPre=-/usr/bin/docker-compose pull
      ExecStart=/usr/bin/docker-compose up -d
      ExecStop=/usr/bin/docker-compose down
      
      [Install]
      WantedBy=multi-user.target
  - name: backup.docker.vault.service
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Vault Secrets Management Container
      After=docker.vault.service
      Requires=docker.vault.service

      [Service]
      Type=oneshot
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/vault/
      ExecStart=/opt/systemd/vault/docker-compose-backup.sh

      [Install]
      WantedBy=backup.docker.vault.timer
  - name: backup.docker.vault.timer
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Vault Secrets Management Container at 02:20 daily

      [Timer]
      OnCalendar=*-*-* 02:20:00
      Unit=backup.docker.vault.service

      [Install]
      WantedBy=multi-user.target
