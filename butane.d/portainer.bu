variant: fcos
version: 1.5.0
storage:
  directories:
    - path: "/opt/systemd/portainer"
      mode: 0755
    - path: "/opt/systemd/portainer/secrets"
      mode: 0750
  files:
    - path: "/opt/systemd/portainer/secrets/portainer_admin.secret"
      mode: 0440
      contents:
        local: files/portainer_admin.secret
      user:
        name: root
      group:
        name: docker
    - path: "/opt/systemd/portainer/docker-compose.yml"
      mode: 0644
      contents:
        inline: |-
          version: '3.9'
          services:
            portainer:
              image: portainer/portainer-ce
              container_name: portainer
              security_opt:
                - no-new-privileges
                - label:disable
              volumes:
                - "data:/data"
                - "/var/run/docker.sock:/var/run/docker.sock"
              secrets:
                - "portainer_admin_pwd"
              command:
                - "--admin-password-file=/run/secrets/portainer_admin_pwd"
                - "--host=unix:///var/run/docker.sock"
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.portainerfrontend.service=portainerfrontend"
                - "traefik.http.routers.portainerfrontend.rule=Host(`containerman.${SERVER_DOMAIN_NAME}`)"
                - "traefik.http.routers.portainerfrontend.entrypoints=websecure"
                - "traefik.http.routers.portainerfrontend.tls.certresolver=letsencryptresolver"
                - "traefik.http.services.portainerfrontend.loadbalancer.server.port=9000"
                - "traefik.http.routers.portaineredge.service=portaineredge"
                - "traefik.http.routers.portaineredge.rule=Host(`edge.${SERVER_DOMAIN_NAME}`)"
                - "traefik.http.routers.portaineredge.entrypoints=websecure"
                - "traefik.http.routers.portaineredge.tls.certresolver=letsencryptresolver"
                - "traefik.http.services.portaineredge.loadbalancer.server.port=8000"
              environment:
                - "TZ=${TZ}"
              networks:
                - traefik
              restart: unless-stopped
          secrets:
            portainer_admin_pwd:
              file: "./secrets/portainer_admin.secret"
          networks:
            traefik:
              name: backend
              external: true
          volumes:
            data:
              external: false
  links:
    - path: /opt/systemd/portainer/docker-compose-backup.sh
      target: /usr/local/bin/docker-compose-backup.sh
systemd:
  units:
    - name: docker.portainer.service
      enabled: true
      contents: |-
        [Unit]
        Description=Portainer Admin Container
        After=network-online.target docker.service docker.traefik.service
        Requires=network.target network-online.target docker.service docker.traefik.service
  
        [Service]
        Type=oneshot
        TimeoutStartSec=0
        RemainAfterExit=true
        EnvironmentFile=-/etc/sysconfig/coreos.env
        WorkingDirectory=/opt/systemd/portainer/
        ExecStartPre=-/usr/bin/docker compose down
        ExecStartPre=-/usr/bin/docker compose rm
        ExecStartPre=-/usr/bin/docker compose pull
        ExecStart=/usr/bin/docker compose up -d
        ExecStop=/usr/bin/docker compose down
  
        [Install]
        WantedBy=multi-user.target
    - name: backup.docker.portainer.service
      enabled: true
      contents: |-
        [Unit]
        Description=Backup Portainer Admin Container
        After=docker.portainer.service
        Requires=docker.portainer.service
  
        [Service]
        Type=oneshot
        EnvironmentFile=-/etc/sysconfig/coreos.env
        WorkingDirectory=/opt/systemd/portainer/
        ExecStart=/opt/systemd/portainer/docker-compose-backup.sh
  
        [Install]
        WantedBy=backup.docker.portainer.timer
    - name: backup.docker.portainer.timer
      enabled: true
      contents: |-
        [Unit]
        Description=Backup Portainer Admin Container at 01:40 daily
  
        [Timer]
        OnCalendar=*-*-* 01:40:00
  
        [Install]
        WantedBy=timers.target
