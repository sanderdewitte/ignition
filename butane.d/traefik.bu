variant: fcos
version: 1.5.0
storage:
  directories:
    - path: "/opt/systemd/traefik"
      mode: 0755
    - path: "/opt/systemd/traefik/secrets"
      mode: 0750
    - path: "/etc/pki/tls/misc/traefik/letsencrypt"
      mode: 0750
      user:
        name: core
      group:
        name: docker
  files:
    - path: "/opt/systemd/traefik/secrets/vultr_api_key.secret"
      mode: 0440
      contents:
        local: files/vultr_api.key
      user:
        name: root
      group:
        name: docker
    - path: "/opt/systemd/traefik/secrets/traefik_admin.secret"
      mode: 0440
      contents:
        local: files/traefik_admin.secret
      user:
        name: root
      group:
        name: docker
    - path: "/opt/systemd/traefik/docker-compose.yml"
      mode: 0644
      contents:
        inline: |-
          version: '3.9'
          services:
            traefik:
              image: traefik:2.10
              container_name: traefik
              security_opt:
                - no-new-privileges
                - label=disable
              user: "${CORE_USER_ID}:${DOCKER_GROUP_ID}"
              volumes:
                - "/etc/pki/tls/misc/traefik/letsencrypt:/letsencrypt"
                - "/var/run/docker.sock:/var/run/docker.sock:ro"
              ports:
                - 80:80
                - 443:443
              command:
                - "--global.checkNewVersion=false"
                - "--global.sendAnonymousUsage=false"
                - "--api=true"
                - "--api.dashboard=true"
                - "--api.insecure=false"
                - "--api.debug=false"
                - "--providers.docker"
                - "--providers.docker.exposedByDefault=false"
                - "--providers.docker.swarmMode=false"
                - "--providers.docker.network=backend"
                - "--providers.docker.defaultRule=Host(`{{ normalize .Name }}.${SERVER_DOMAIN_NAME}`)"
                - "--entrypoints.web.address=:80"
                - "--entrypoints.websecure.address=:443"
                #- "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
                - "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
                - "--certificatesresolvers.letsencryptresolver.acme.tlschallenge=false"
                - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=false"
                - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge=true"
                - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=vultr"
                - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.delaybeforecheck=10"
                - "--certificatesresolvers.letsencryptresolver.acme.email=letsencrypt@${SERVER_DOMAIN_NAME}"
                - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json"
                - "--serverstransport.forwardingtimeouts.idleconntimeout=10"
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.https-redirect.entrypoints=web"
                - "traefik.http.routers.https-redirect.rule=HostRegexp(`{host:.+}`)"
                - "traefik.http.routers.https-redirect.middlewares=redirect-to-https"
                - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
                - "traefik.http.routers.traefik.rule=Host(`router.${SERVER_DOMAIN_NAME}`)"
                - "traefik.http.routers.traefik.entrypoints=websecure"
                - "traefik.http.routers.traefik.service=api@internal"
                - "traefik.http.routers.traefik.tls.certresolver=letsencryptresolver"
                - "traefik.http.routers.traefik.middlewares=traefik-auth"
                - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/run/secrets/traefik_admin_credentials"
                - "traefik.http.middlewares.traefik-auth.basicauth.realm=RouterCredentials"
                - "traefik.http.middlewares.traefik-auth.basicauth.headerField=X-WebAuth-User"
                - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=false"
              secrets:
                - "vultr_api_key"
                - "traefik_admin_credentials"
              environment:
                - "TZ=${TZ}"
                - "VULTR_API_KEY_FILE=/run/secrets/vultr_api_key"
                - "VULTR_HTTP_TIMEOUT=10800"
                - "LEGO_DISABLE_CNAME_SUPPORT=true"
              networks:
                - traefik
              restart: unless-stopped
          secrets:
            vultr_api_key:
              file: "./secrets/vultr_api_key.secret"
            traefik_admin_credentials:
              file: "./secrets/traefik_admin.secret"
          networks:
            traefik:
              name: backend
            default:
              driver: bridge
  links:
    - path: /opt/systemd/traefik/docker-compose-backup.sh
      target: /usr/local/bin/docker-compose-backup.sh
systemd:
  units:
  - name: docker.traefik.service
    enabled: true
    contents: |-
      [Unit]
      Description=Traefik Router Container
      After=network-online.target docker.service
      Requires=network.target network-online.target docker.service
      
      [Service]
      Type=oneshot
      TimeoutStartSec=0
      RemainAfterExit=true
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/traefik/
      ExecStartPre=-/usr/bin/docker compose down
      ExecStartPre=-/usr/bin/docker compose rm
      ExecStartPre=-/usr/bin/docker compose pull
      ExecStart=/usr/bin/docker compose up -d
      ExecStop=/usr/bin/docker compose down
      
      [Install]
      WantedBy=multi-user.target
  - name: backup.docker.traefik.service
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Traefik Router Container
      After=docker.traefik.service
      Requires=docker.traefik.service
      
      [Service]
      Type=oneshot
      EnvironmentFile=-/etc/sysconfig/coreos.env
      WorkingDirectory=/opt/systemd/traefik/
      ExecStart=/opt/systemd/traefik/docker-compose-backup.sh
      
      [Install]
      WantedBy=backup.docker.traefik.timer
  - name: backup.docker.traefik.timer
    enabled: true
    contents: |-
      [Unit]
      Description=Backup Traefik Router Container at 02:10 daily
      
      [Timer]
      OnCalendar=*-*-* 02:10:00
      Unit=backup.docker.traefik.service
      
      [Install]
      WantedBy=timers.target
