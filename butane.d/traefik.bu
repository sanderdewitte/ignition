variant: fcos
version: 1.4.0
storage:
  directories:
    - path: "/opt/systemd/traefik"
      mode: 0755
  files:
    - path: "/opt/systemd/traefik/docker-compose.yml"
      mode: 0644
      contents:
        inline: |-
          version: '3.9'
          services:
            traefik:
              image: traefik:v2.6
              container_name: traefik
              privileged: true
              volumes:
                - '/var/run/docker.sock:/var/run/docker.sock:ro'
                - '/etc/pki/tls/misc/traefik/letsencrypt:/letsencrypt'
              ports:
                - 80:80
                - 443:443
                - 8080:8080
              command:
                - --api.insecure=true
                - --providers.docker
                - --providers.docker.exposedByDefault=false
                - --providers.docker.network=traefik
                - --entrypoints.web.address=:80
                - --entrypoints.websecure.address=:443
                - '--providers.docker.defaultRule=Host(`{{ normalize .Name }}.${SERVER_DOMAIN_NAME}`)'
                - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge=true"
                - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=vultr"
                - "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
                # - "--certificatesresolvers.letsencryptresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
                - "--certificatesresolvers.letsencryptresolver.acme.email=letsencrypt@${SERVER_DOMAIN_NAME}"
                - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json"
                - "--serverstransport.forwardingtimeouts.idleconntimeout=10"
              labels:
                - traefik.enable=true
                - traefik.http.routers.https-redirect.entrypoints=web
                - traefik.http.routers.https-redirect.rule=HostRegexp(`{any:.*}`)
                - traefik.http.routers.https-redirect.middlewares=https-only
                - traefik.http.middlewares.https-only.redirectscheme.scheme=https
                - 'traefik.http.routers.traefik.rule=Host(`traefik.${SERVER_DOMAIN_NAME}`)'
                - traefik.http.routers.traefik.entrypoints=websecure
                - 'traefik.http.routers.traefik.service=api@internal'
                - traefik.http.routers.traefik.tls.certresolver=letsencryptresolver
              networks:
                - traefik
          networks:
            traefik:
              name: front
systemd:
  units:
  - name: docker.traefik.service
    enabled: true
    contents: |-
      [Unit]
      Description=Traefik Router Container
      After=network-online.target docker.service
      Requires=network.target network-online.target docker.service
      
      [Service]
      Type=oneshot
      TimeoutStartSec=0
      EnvironmentFile=-/etc/sysconfig/coreos-env
      WorkingDirectory=/opt/systemd/traefik/
      ExecStartPre=-/usr/bin/timeout 2m /usr/bin/bash -c "while [ ! -x /usr/bin/docker-compose ]; do sleep 1; done"
      ExecStartPre=-/usr/bin/timeout 1m /usr/bin/bash -c "while [ ! -x \"$(find /usr/lib64 -name 'libpython3*.so.*' | head -1)\" ]; do sleep 1; done"
      ExecStartPre=-/usr/bin/docker-compose down -v
      ExecStartPre=-/usr/bin/docker-compose rm -v
      ExecStartPre=-/usr/bin/docker-compose pull
      ExecStart=/usr/bin/docker-compose up
      ExecStop=/usr/bin/docker-compose down -v
      
      [Install]
      WantedBy=multi-user.target
